{"version":3,"sources":["components/TaskListItem/TaskListItem.js","redux/lists/listsActions.js","components/AddButton/AddButton.js","components/TaskList/TaskList.js","redux/lists/listsSelectors.js","components/App.js","redux/lists/listsReducer.js","redux/store.js","index.js","components/AddButton/AddButton.module.css","components/TaskList/TaskList.module.css","components/App.module.css","components/TaskListItem/TaskListItem.module.css"],"names":["TaskListItem","id","title","description","index","draggableId","provided","ref","innerRef","draggableProps","dragHandleProps","className","css","item","actionType","AddButton","state","isFormOpen","resetForm","setState","openFormHandler","closeFormHandler","inputChangeHandler","e","target","name","value","submitFormHandler","props","addList","addCard","isList","listId","preventDefault","shortid","cards","renderAddButton","buttonText","buttonColor","backgroundColor","onClick","style","type","Icon","renderForm","placeholderTitle","buttonTitle","form","onSubmit","onChange","placeholder","autoFocus","display","closeForm","this","buttonWrap","Component","mapDispatchToProps","list","payload","card","connect","TaskList","taskList","droppableId","droppableProps","itemsList","map","key","getLists","lists","App","onDragEnd","result","dragCard","destination","source","console","log","direction","droppableIdStart","droppableIdEnd","droppableIndexStart","droppableIndexEnd","listsSelectors","initialState","listsReducer","newState","splice","find","listStart","listEnd","rootReducer","combineReducers","store","createStore","devToolsEnhancer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"4PAoBeA,EAhBM,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,MAA3B,OACnB,kBAAC,IAAD,CAAWC,YAAaJ,EAAIG,MAAOA,IAChC,SAAAE,GAAQ,OACP,sCACEC,IAAKD,EAASE,UACVF,EAASG,eACTH,EAASI,gBAHf,CAIEC,UAAWC,IAAIC,OAEf,4BAAKX,GACL,2BAAIC,Q,iCCdCW,EACD,WADCA,EAGD,WAHCA,EAKA,Y,iBCEPC,E,2MACJC,MAAQ,CAAEC,YAAY,EAAOf,MAAO,GAAIC,YAAa,I,EAErDe,UAAY,WACV,EAAKC,SAAS,CAAEjB,MAAO,GAAIC,YAAa,M,EAG1CiB,gBAAkB,WAChB,EAAKD,SAAS,CAAEF,YAAY,K,EAG9BI,iBAAmB,WACjB,EAAKF,SAAS,CAAEF,YAAY,IAC5B,EAAKC,a,EAGPI,mBAAqB,SAAAC,GAAM,IAAD,EACAA,EAAEC,OAAlBC,EADgB,EAChBA,KAAMC,EADU,EACVA,MACd,EAAKP,SAAL,eAAiBM,EAAOC,K,EAG1BC,kBAAoB,SAAAJ,GAAM,IAAD,EACQ,EAAKP,MAA5Bd,EADe,EACfA,MAAOC,EADQ,EACRA,YADQ,EAEsB,EAAKyB,MAA1CC,EAFe,EAEfA,QAASC,EAFM,EAENA,QAASC,EAFH,EAEGA,OAAQC,EAFX,EAEWA,QAClCT,EAAEU,iBACG/B,KACD6B,GAMFF,EALgB,CACd5B,GAAIiC,MACJhC,QACAiC,MAAO,KAGT,EAAKd,qBAOLS,EAAQE,EALQ,CACd/B,GAAIiC,MACJhC,QACAC,gBAGF,EAAKkB,sB,EAITe,gBAAkB,WAAO,IACfL,EAAW,EAAKH,MAAhBG,OAEFM,EAAaN,EAAS,mBAAqB,mBAI3CO,EAAcP,EAChB,CAAEQ,gBAAiB,WACnB,CAAEA,gBAAiB,eAEvB,OACE,4BAAQC,QAAS,EAAKpB,gBAAiBqB,MAAOH,EAAaI,KAAK,UAC9D,kBAACC,EAAA,EAAD,YACCN,I,EAKPO,WAAa,WAAO,IAAD,EACc,EAAK5B,MAA5Bd,EADS,EACTA,MAAOC,EADE,EACFA,YACP4B,EAAW,EAAKH,MAAhBG,OACFc,EAAmBd,EACrB,4BACA,4BACEe,EAAcf,EAAS,WAAa,WAC1C,OACE,0BAAMpB,UAAWC,IAAImC,KAAMC,SAAU,EAAKrB,mBACxC,2BACEsB,SAAU,EAAK3B,mBACfG,KAAK,QACLyB,YAAaL,EACbM,WAAS,EACTzB,MAAOxB,KAEP6B,GACA,8BACEkB,SAAU,EAAK3B,mBACfG,KAAK,cACLyB,YAAY,kCACZxB,MAAOvB,IAGX,yBAAKsC,MAAO,CAAEW,QAAS,SACrB,4BAAQV,KAAK,UAAUI,GACvB,4BACEN,QAAS,EAAKnB,iBACdV,UAAWC,IAAIyC,UACfX,KAAK,UAEL,kBAACC,EAAA,EAAD,kB,wEAOA,IACA1B,EAAeqC,KAAKtC,MAApBC,WAER,OACE,wBAAIN,UAAWC,IAAI2C,YAChBtC,EAAaqC,KAAKV,aAAeU,KAAKlB,uB,GA3GvBoB,aAmHlBC,EAAqB,CACzB5B,QDnHqB,SAAA6B,GAAI,MAAK,CAC9BhB,KAAM5B,EACN6C,QAASD,ICkHT5B,QD1GqB,SAACE,EAAQ4B,GAAT,MAAmB,CACxClB,KAAM5B,EACN6C,QAAS,CAAE3B,SAAQ4B,WC2GNC,cAAQ,KAAMJ,EAAdI,CAAkC9C,G,iBCvFlC+C,EAlCE,SAAC,GAAD,IAAG7D,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOiC,EAAd,EAAcA,MAAO/B,EAArB,EAAqBA,MAArB,OACf,kBAAC,IAAD,CAAWC,YAAaJ,EAAIG,MAAOA,IAChC,SAAAE,GAAQ,OACP,wCACMA,EAASG,eACTH,EAASI,gBAFf,CAGEH,IAAKD,EAASE,SACdG,UAAWC,IAAImD,WAEf,kBAAC,IAAD,CAAWC,YAAa/D,IACrB,SAAAK,GAAQ,OACP,yCAASA,EAAS2D,eAAlB,CAAkC1D,IAAKD,EAASE,WAC9C,4BAAKN,GACL,wBAAIS,UAAWC,IAAIsD,WAChB/B,EAAMgC,KAAI,WAA6B/D,GAA7B,IAAGH,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OACT,kBAAC,EAAD,CACEiE,IAAKnE,EACLG,MAAOA,EACPH,GAAIA,EACJC,MAAOA,EACPC,YAAaA,OAGjB,kBAAC,EAAD,CAAW6B,OAAQ/B,IAClBK,EAAS4C,sBC9BbmB,EAAW,SAAArD,GAAK,OAAIA,EAAMsD,OCSjCC,E,2MACJC,UAAY,SAAAC,GAAW,IACbC,EAAa,EAAK9C,MAAlB8C,SACAC,EAA2CF,EAA3CE,YAAaC,EAA8BH,EAA9BG,OAAqBlC,GAAS+B,EAAtBpE,YAAsBoE,EAAT/B,MACrCiC,IAIHC,EAAOZ,cAAgBW,EAAYX,aACnCY,EAAOxE,QAAUuE,EAAYvE,QAI/ByE,QAAQC,IACNF,EAAOZ,YACPW,EAAYX,YACZY,EAAOxE,MACPuE,EAAYvE,MACZsC,GAEFgC,EACEE,EAAOZ,YACPW,EAAYX,YACZY,EAAOxE,MACPuE,EAAYvE,MACZsC,M,wEAIM,IACA4B,EAAUhB,KAAK1B,MAAf0C,MACR,OACE,kBAAC,IAAD,CAAiBE,UAAWlB,KAAKkB,WAC/B,yBAAK7D,UAAU,OACb,2CACA,kBAAC,IAAD,CAAWqD,YAAY,YAAYe,UAAU,aAAarC,KAAK,SAC5D,SAAApC,GAAQ,OACP,wCACMA,EAAS2D,eADf,CAEE1D,IAAKD,EAASE,SACdG,UAAWC,IAAI0D,QAEdA,EAAMH,KAAI,WAAuB/D,GAAvB,IAAGF,EAAH,EAAGA,MAAOD,EAAV,EAAUA,GAAIkC,EAAd,EAAcA,MAAd,OACT,kBAAC,EAAD,CACEiC,IAAKnE,EACLC,MAAOA,EACPD,GAAIA,EACJkC,MAAOA,EACP/B,MAAOA,OAGX,kBAAC,EAAD,CAAW2B,OAAO,mB,GAnDhByB,aAiEZC,EAAqB,CACzBiB,SJ/CsB,SACtBM,EACAC,EACAC,EACAC,EACAzC,GALsB,MAMlB,CACJA,KAAM5B,EACN6C,QAAS,CACPqB,mBACAC,iBACAE,oBACAD,sBACAxC,WIqCWmB,eARS,SAAA7C,GAAK,MAAK,CAChCsD,MAAOc,EAAwBpE,MAOOyC,EAAzBI,CAA6CU,G,glBC3E5D,IAAMc,EAAe,CACnB,CACEnF,MAAO,aACPD,GAAI,WACJkC,MAAO,CACL,CACElC,GAAI,SACJC,MAAO,UACPC,YAAa,uBA6DNmF,EAvDM,WAA8C,IAA7CtE,EAA4C,uDAApCqE,EAAoC,yCAAd1B,GAAc,EAApBjB,KAAoB,EAAdiB,SAClD,OAAQjB,GACN,KAAK5B,EACH,MAAM,GAAN,mBAAWE,GAAX,CAAkB2C,IACpB,KAAK7C,EACH,IAAMyE,EAAWvE,EAAMmD,KAAI,SAAAT,GACzB,OAAIA,EAAKzD,KAAO0D,EAAQ3B,OACf,EAAP,GACK0B,EADL,CAEEvB,MAAM,GAAD,mBAAMuB,EAAKvB,OAAX,CAAkBwB,EAAQC,SAG1BF,KAGX,OAAO6B,EACT,KAAKzE,EAAL,IAEIkE,EAKErB,EALFqB,iBACAC,EAIEtB,EAJFsB,eACAE,EAGExB,EAHFwB,kBACAD,EAEEvB,EAFFuB,oBACAxC,EACEiB,EADFjB,KAGF,GAAa,SAATA,EAAiB,CACnB,IAAM6C,EAAQ,YAAOvE,GACf0C,EAAO6B,EAASC,OAAON,EAAqB,GAElD,OADAK,EAASC,OAAT,MAAAD,EAAQ,CAAQJ,EAAmB,GAA3B,mBAAiCzB,KAClC6B,EAIT,GAAIP,IAAqBC,EAAgB,CAAC,IAAD,EACjCvB,EAAO1C,EAAMyE,MAAK,SAAA/B,GAAI,OAAIsB,IAAqBtB,EAAKzD,MAC1D4E,QAAQC,IAAIpB,GACZ,IAAME,EAAOF,EAAKvB,MAAMqD,OAAON,EAAqB,GACpDL,QAAQC,IAAIlB,IACZ,EAAAF,EAAKvB,OAAMqD,OAAX,SAAkBL,EAAmB,GAArC,mBAA2CvB,KAG7C,GAAIoB,IAAqBC,EAAgB,CAAC,IAAD,EACjCS,EAAY1E,EAAMyE,MAAK,SAAA/B,GAAI,OAAIsB,IAAqBtB,EAAKzD,MAEzD2D,EAAO8B,EAAUvD,MAAMqD,OAAON,EAAqB,GAEnDS,EAAU3E,EAAMyE,MAAK,SAAA/B,GAAI,OAAIuB,IAAmBvB,EAAKzD,OAC3D,EAAA0F,EAAQxD,OAAMqD,OAAd,SAAqBL,EAAmB,GAAxC,mBAA8CvB,KAEhD,OAAO,YAAI5C,GACb,QACE,OAAOA,IChEP4E,EAAcC,0BAAgB,CAClCvB,MAAOgB,IAKMQ,EAFDC,sBAAYH,EAAaI,8B,OCAvCC,IAASC,OACP,kBAAC,IAAD,CAAUJ,MAAOA,GACf,kBAAC,EAAD,OAEFK,SAASC,eAAe,U,mBCX1BC,EAAOC,QAAU,CAAC,WAAa,8BAA8B,KAAO,wBAAwB,UAAY,+B,mBCAxGD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,UAAY,8B,mBCApED,EAAOC,QAAU,CAAC,MAAQ,qB,mBCA1BD,EAAOC,QAAU,CAAC,KAAO,6B","file":"static/js/main.47533ed1.chunk.js","sourcesContent":["import React from 'react';\nimport css from './TaskListItem.module.css';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst TaskListItem = ({ id, title, description, index }) => (\n  <Draggable draggableId={id} index={index}>\n    {provided => (\n      <li\n        ref={provided.innerRef}\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        className={css.item}\n      >\n        <h4>{title}</h4>\n        <p>{description}</p>\n      </li>\n    )}\n  </Draggable>\n);\n\nexport default TaskListItem;\n","export const actionType = {\n  ADD_CARD: 'ADD_CARD',\n  REMOVE_CARD: 'REMOVE_CARD',\n  ADD_LIST: 'ADD_LIST',\n  REMOVE_LIST: 'REMOVE_LIST',\n  DRAG_CARD: 'DRAG_CARD'\n};\n\nexport const addList = list => ({\n  type: actionType.ADD_LIST,\n  payload: list\n});\n\nexport const removeList = id => ({\n  type: actionType.REMOVE_LIST,\n  payload: id\n});\n\nexport const addCard = (listId, card) => ({\n  type: actionType.ADD_CARD,\n  payload: { listId, card }\n});\n\nexport const removeCard = id => ({\n  type: actionType.REMOVE_CARD,\n  payload: id\n});\n\nexport const dragCard = (\n  droppableIdStart,\n  droppableIdEnd,\n  droppableIndexStart,\n  droppableIndexEnd,\n  type\n) => ({\n  type: actionType.DRAG_CARD,\n  payload: {\n    droppableIdStart,\n    droppableIdEnd,\n    droppableIndexEnd,\n    droppableIndexStart,\n    type\n  }\n});\n","import React, { Component } from 'react';\nimport { Icon } from '@material-ui/core';\nimport css from './AddButton.module.css';\nimport { connect } from 'react-redux';\nimport * as listsActions from '../../redux/lists/listsActions';\nimport shortid from 'shortid';\n\nclass AddButton extends Component {\n  state = { isFormOpen: false, title: '', description: '' };\n\n  resetForm = () => {\n    this.setState({ title: '', description: '' });\n  };\n\n  openFormHandler = () => {\n    this.setState({ isFormOpen: true });\n  };\n\n  closeFormHandler = () => {\n    this.setState({ isFormOpen: false });\n    this.resetForm();\n  };\n\n  inputChangeHandler = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  submitFormHandler = e => {\n    const { title, description } = this.state;\n    const { addList, addCard, isList, listId } = this.props;\n    e.preventDefault();\n    if (!title) return;\n    if (isList) {\n      const newList = {\n        id: shortid(),\n        title,\n        cards: []\n      };\n      addList(newList);\n      this.closeFormHandler();\n    } else {\n      const newCard = {\n        id: shortid(),\n        title,\n        description\n      };\n      addCard(listId, newCard);\n      this.closeFormHandler();\n    }\n  };\n\n  renderAddButton = () => {\n    const { isList } = this.props;\n\n    const buttonText = isList ? 'Add another list' : 'Add another card';\n\n    // const buttonMargin = isList ? { margin: 0 } : { margin: '0 -0.5rem' };\n\n    const buttonColor = isList\n      ? { backgroundColor: '#ebecf0' }\n      : { backgroundColor: 'transparent' };\n\n    return (\n      <button onClick={this.openFormHandler} style={buttonColor} type=\"button\">\n        <Icon>add</Icon>\n        {buttonText}\n      </button>\n    );\n  };\n\n  renderForm = () => {\n    const { title, description } = this.state;\n    const { isList } = this.props;\n    const placeholderTitle = isList\n      ? 'Enter a title for list...'\n      : 'Enter a title for task...';\n    const buttonTitle = isList ? 'Add list' : 'Add task';\n    return (\n      <form className={css.form} onSubmit={this.submitFormHandler}>\n        <input\n          onChange={this.inputChangeHandler}\n          name=\"title\"\n          placeholder={placeholderTitle}\n          autoFocus\n          value={title}\n        />\n        {!isList && (\n          <textarea\n            onChange={this.inputChangeHandler}\n            name=\"description\"\n            placeholder=\"Enter a description for task...\"\n            value={description}\n          ></textarea>\n        )}\n        <div style={{ display: 'flex' }}>\n          <button type=\"submit\">{buttonTitle}</button>\n          <button\n            onClick={this.closeFormHandler}\n            className={css.closeForm}\n            type=\"button\"\n          >\n            <Icon>close</Icon>\n          </button>\n        </div>\n      </form>\n    );\n  };\n\n  render() {\n    const { isFormOpen } = this.state;\n\n    return (\n      <li className={css.buttonWrap}>\n        {isFormOpen ? this.renderForm() : this.renderAddButton()}\n      </li>\n    );\n  }\n}\n\n// const mapStateToProps = state => ({});\n\nconst mapDispatchToProps = {\n  addList: listsActions.addList,\n  addCard: listsActions.addCard\n};\n\nexport default connect(null, mapDispatchToProps)(AddButton);\n","import React from 'react';\nimport TaskListItem from '../TaskListItem/TaskListItem';\nimport AddButton from '../AddButton/AddButton';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport css from './TaskList.module.css';\n\nconst TaskList = ({ id, title, cards, index }) => (\n  <Draggable draggableId={id} index={index}>\n    {provided => (\n      <li\n        {...provided.draggableProps}\n        {...provided.dragHandleProps}\n        ref={provided.innerRef}\n        className={css.taskList}\n      >\n        <Droppable droppableId={id}>\n          {provided => (\n            <div {...provided.droppableProps} ref={provided.innerRef}>\n              <h3>{title}</h3>\n              <ul className={css.itemsList}>\n                {cards.map(({ id, title, description }, index) => (\n                  <TaskListItem\n                    key={id}\n                    index={index}\n                    id={id}\n                    title={title}\n                    description={description}\n                  />\n                ))}\n                <AddButton listId={id} />\n                {provided.placeholder}\n              </ul>\n            </div>\n          )}\n        </Droppable>\n      </li>\n    )}\n  </Draggable>\n);\n\nexport default TaskList;\n","export const getLists = state => state.lists;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport css from './App.module.css';\nimport TaskList from './TaskList/TaskList';\nimport AddButton from './AddButton/AddButton';\nimport * as listsSelectors from '../redux/lists/listsSelectors';\nimport * as listsActions from '../redux/lists/listsActions';\n\nclass App extends Component {\n  onDragEnd = result => {\n    const { dragCard } = this.props;\n    const { destination, source, draggableId, type } = result;\n    if (!destination) {\n      return;\n    }\n    if (\n      source.droppableId === destination.droppableId &&\n      source.index === destination.index\n    ) {\n      return;\n    }\n    console.log(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      type\n    );\n    dragCard(\n      source.droppableId,\n      destination.droppableId,\n      source.index,\n      destination.index,\n      type\n    );\n  };\n\n  render() {\n    const { lists } = this.props;\n    return (\n      <DragDropContext onDragEnd={this.onDragEnd}>\n        <div className=\"App\">\n          <h2>Hello Ihor!</h2>\n          <Droppable droppableId=\"all-lists\" direction=\"horizontal\" type=\"list\">\n            {provided => (\n              <ul\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n                className={css.lists}\n              >\n                {lists.map(({ title, id, cards }, index) => (\n                  <TaskList\n                    key={id}\n                    title={title}\n                    id={id}\n                    cards={cards}\n                    index={index}\n                  />\n                ))}\n                <AddButton isList=\"true\" />\n              </ul>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  lists: listsSelectors.getLists(state)\n});\n\nconst mapDispatchToProps = {\n  dragCard: listsActions.dragCard\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import { actionType } from './listsActions';\n// import * as listsSelectors from './listsSelectors';\n\nconst initialState = [\n  {\n    title: 'List Title',\n    id: '1lhkhgbk',\n    cards: [\n      {\n        id: '10lkjj',\n        title: 'Example',\n        description: 'Card Description'\n      }\n    ]\n  }\n];\n\nconst listsReducer = (state = initialState, { type, payload }) => {\n  switch (type) {\n    case actionType.ADD_LIST:\n      return [...state, payload];\n    case actionType.ADD_CARD:\n      const newState = state.map(list => {\n        if (list.id === payload.listId) {\n          return {\n            ...list,\n            cards: [...list.cards, payload.card]\n          };\n        } else {\n          return list;\n        }\n      });\n      return newState;\n    case actionType.DRAG_CARD:\n      const {\n        droppableIdStart,\n        droppableIdEnd,\n        droppableIndexEnd,\n        droppableIndexStart,\n        type\n      } = payload;\n\n      if (type === 'list') {\n        const newState = [...state];\n        const list = newState.splice(droppableIndexStart, 1);\n        newState.splice(droppableIndexEnd, 0, ...list);\n        return newState;\n      }\n\n      // in the same list\n      if (droppableIdStart === droppableIdEnd) {\n        const list = state.find(list => droppableIdStart === list.id);\n        console.log(list);\n        const card = list.cards.splice(droppableIndexStart, 1);\n        console.log(card);\n        list.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n\n      if (droppableIdStart !== droppableIdEnd) {\n        const listStart = state.find(list => droppableIdStart === list.id);\n\n        const card = listStart.cards.splice(droppableIndexStart, 1);\n\n        const listEnd = state.find(list => droppableIdEnd === list.id);\n        listEnd.cards.splice(droppableIndexEnd, 0, ...card);\n      }\n      return [...state];\n    default:\n      return state;\n  }\n};\n\nexport default listsReducer;\n","import { createStore, combineReducers } from 'redux';\nimport { devToolsEnhancer } from 'redux-devtools-extension';\nimport listsReducer from './lists/listsReducer';\n\nconst rootReducer = combineReducers({\n  lists: listsReducer\n});\n\nconst store = createStore(rootReducer, devToolsEnhancer());\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport './styles.css';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonWrap\":\"AddButton_buttonWrap__2G25K\",\"form\":\"AddButton_form__TXQ-e\",\"closeForm\":\"AddButton_closeForm__1ntl-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskList\":\"TaskList_taskList__2FhiQ\",\"itemsList\":\"TaskList_itemsList__3b3L8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lists\":\"App_lists__33TOD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"TaskListItem_item__3cPFU\"};"],"sourceRoot":""}